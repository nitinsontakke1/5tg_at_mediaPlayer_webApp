<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title> Audio Player</title>
    @*@Styles.Render("~/Content/css")*@
    @*@Scripts.Render("~/bundles/modernizr")*@
    <link href="~/Content/assets/css/vendors.bundle.css" rel="stylesheet" />
    <link href="~/Content/assets/css/styles.bundle.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700,800" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Roboto+Slab:100,300,400,700" rel="stylesheet">
    <style>
        .playing {
            background-color: green;
        }

        .progress {
            width: 1px;
            height: 3px;
            background: #006B5A;
            transition: width .1s linear;
        }

    </style>
</head>
<body>
  
    <div id="loading">
        <div class="loader">
            <div class="eq">
                <span class="eq-bar eq-bar--1"> </span>
                <span class="eq-bar eq-bar--2"></span>
                <span class="eq-bar eq-bar--3"></span>
                <span class="eq-bar eq-bar--4"></span>
                <span class="eq-bar eq-bar--5"></span>
                <span class="eq-bar eq-bar--6"></span>
            </div>
            <span class="text">Loading</span>
        </div>
    </div>
    <div id="wrapper" data-scrollable="true">
        <aside id="sidebar" class="sidebar-primary">

            <div class="sidebar-header d-flex align-items-center">
                <a href="#" class="brand"> <img src="" /> </a>
                <button type="button" class="btn p-0 ml-auto" id="hideSidebar"><i class="ion-md-arrow-back h3"></i></button>
                <button type="button" class="btn toggle-menu" id="toggleSidebar"><span></span> <span></span> <span></span></button>
            </div>

            <nav class="navbar">
                <ul class="navbar-nav" data-scrollable="true">
                    <li class="nav-item nav-header">Browse Music</li>

                    <li class="nav-item">
                        <a href="/Home/Playlist" class="nav-link "><i class="la la-home"></i><span>Playlist</span></a>
                    </li>
                    <li class="nav-item">
                        <a href="/Home/Home" class="nav-link active"><i class="la la-youtube-play"></i><span>All Songs</span></a>
                    </li>

                    <li class="nav-item">
                        <a href="#" class="nav-link"><i class="la la-file-audio-o"></i><span>Audio Routing</span></a>
                    </li>
                    <li class="nav-item">
                        <a href="#" class="nav-link"><i class="la la-play"></i><span>Streaming</span></a>
                    </li>
                    <li class="nav-item">
                        <a href="#" class="nav-link"><i class="la la-diamond"></i><span>Features</span></a>
                    </li>
                    <li class="nav-item">
                        <a data-toggle="modal" data-target="#Command" class="nav-link"><i class="ion-md-musical-note"></i> <span>Commands</span></a>
                    </li>
                    <li class="nav-item">
                        <a href="/Home/Loghistory" class="nav-link"><i class="la la-diamond"></i><span>Log History</span></a>
                    </li>
                </ul>
            </nav>

            <div class="sidebar-footer">

                <a data-toggle="modal" data-target="#lang" class="btn btn-block btn-danger btn-air btn-bold"><i class="ion-md-musical-note"></i> <span>Add Music</span></a>
            </div>

        </aside>
        <main id="pageWrapper">

            <header id="header" class="bg-primary">
                <div class="d-flex align-items-center">
                    <button type="button" class="btn toggle-menu mr-3" id="openSidebar"><span></span> <span></span> <span></span></button>
                    <form action="#" id="searchForm">
                        <button type="button" class="btn ion-ios-search"></button> <input type="text" placeholder="Search..." id="searchInput" class="form-control" />

                    </form>
                    <ul class="header-options d-flex align-items-center">
                        <li class="dropdown fade-in">
                            <a href="javascript:void(0);" class="d-flex align-items-center py-2" role="button" id="userMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <div class="avatar avatar-sm avatar-circle"><img src="~/Content/assets/images/users/thumb.jpg" alt="user" /></div>
                                <span class="pl-2">Halo Admin</span>
                            </a>
                            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="userMenu">
                                <a class="dropdown-item" href="profile.html"><i class="ion-md-contact"></i> <span>Profile</span></a> <a class="dropdown-item" href="plan.html"><i class="ion-md-radio-button-off"></i> <span>Your Plan</span></a>
                                @*<a class="dropdown-item" href="settings.html"><i class="ion-md-settings"></i> <span>Settings</span></a>*@
                                <div class="dropdown-divider"></div>
                                <div class="px-4 py-2"><a href="#" class="btn btn-sm btn-air btn-pill btn-danger">Logout</a></div>
                            </div>
                        </li>
                    </ul>
                </div>
            </header>

            <div class="banner bg-home"></div>
            @RenderBody()
        </main>
        <div id="audioPlayer" class="player-primary">
            <div id="progress-container">
                <input type="range" class="amplitude-song-slider" />

                <progress class="audio-progress audio-progress--played"></progress>
                <progress class="audio-progress audio-progress--buffered" value="100"></progress>
            </div>
            <div class="audio">
                <div class="song-image">
                    <img src="/Content/assets/images/cover/small/small.jpg" />
                </div>
                <div class="song-info pl-3">
                    <span class="song-name d-inline-block text-truncate" id="songname"></span>
                    <span class="song-artists d-block text-muted"></span>
                </div>
            </div>

            <div class="audio-controls">
                <div class="audio-controls--left d-flex mr-auto">
                    @*<button class="btn btn-icon-only amplitude-repeat"><i class="ion-md-sync"></i></button>*@
                </div>
                <div class="audio-controls-main d-flex">
                    <button id="backImage" class="btn btn-icon-only"><i class="ion-md-skip-backward"></i></button>

                    <button id="swapImage" class="btn btn-air btn-pill btn-default btn-icon-only"><i id="toggle" class="ion-md-play"></i></button>
                    <button id="nextImage" class="btn btn-icon-only amplitude-next"><i class="ion-md-skip-forward"></i></button>
                    <button id="stopImage" style="display:none;" class="btn btn-icon-only amplitude-next"><i class="ion-md-pause"></i></button>

                </div>
                <div class="audio-controls--right d-flex ml-auto">
                    @*<button class="btn btn-icon-only amplitude-shuffle amplitude-shuffle-off" id="shuffle"><i class="ion-md-shuffle"></i></button>*@
                </div>
            </div>


            <div class="audio-info d-flex align-items-center pr-4">
                <span class="mr-4"><span class="amplitude-current-minutes"></span>:<span class="amplitude-current-seconds"></span> / <span class="amplitude-duration-minutes"></span>:<span class="amplitude-duration-seconds"></span></span>
                <div class="audio-volume dropdown">
                    @*<button class="btn btn-icon-only" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="ion-md-volume-low"></i></button>*@
                    @*<div class="dropdown-menu dropdown-menu-right volume-dropdown-menu"><input type="range" class="amplitude-volume-slider" value="100" /></div>*@
                    <button class="btn btn-icon-only" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="ion-md-volume-low"></i>
                    </button>
                    <div class="dropdown-menu dropdown-menu-right volume-dropdown-menu">
                        <input type="range" class="amplitude-volume-slider" value="100" />
                    </div>
                </div>

            </div>


        </div>
    </div>



    <!--- Modal Popup to add new songs-->

    <div class="modal fade" id="lang" tabindex="-1" role="dialog" aria-labelledby="langTitle" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">

                <div class="modal-body" style="padding:0;">

                    <div>
                        <div class="card-header"><h6 class="card-title mb-0 text-center">Add Music</h6></div>
                        <div class="card-body">
                            @using (Html.BeginForm("UploadAudio", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
                            {

                                <audio id="uploadaudio" style="display:none;"></audio>


                                <div class="form-row form-group">
                                    <label for="songFile" class="col-md-4 text-md-right col-form-label">Song File</label>
                                    <div class="col-md-7">
                                        <div class="custom-file">
                                            <input type="file" class="custom-file-input" id="fileupload" name="fileupload" />
                                            <label class="custom-file-label" id="chooseFile"></label>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-row form-group">
                                    <label for="Songname" class="col-md-4 text-md-right col-form-label">Song Name</label>
                                    <div class="col-md-7">
                                        <label class="col-md-4 text-md-right col-form-label" id="Songname" name="Songname"></label>
                                    </div>
                                </div>

                                <div class="form-row form-group">
                                    <label for="FileType" class="col-md-4 text-md-right col-form-label">File Type</label>
                                    <div class="col-md-7">
                                        <label class="col-md-4 text-md-right col-form-label" id="FileType"></label>
                                    </div>
                                </div>

                                <div class="form-row form-group">
                                    <label for="FileSize" class="col-md-4 text-md-right col-form-label">File Size</label>
                                    <div class="col-md-7">
                                        <label class="col-md-4 text-md-right col-form-label" id="FileSize"></label>

                                    </div>
                                </div>

                                <div class="form-row form-group">
                                    <label for="getduration" class="col-md-4 text-md-right col-form-label">Duration</label>
                                    <div class="col-md-7">
                                        <label class="col-md-4 text-md-right col-form-label" id="getduration" name="getduration"></label>
                                        <input type="hidden" id="fileduration" name="fileduration" value="">

                                    </div>
                                </div>
                                @*<div class="form-row form-group">
                                        <label for="Duration" class="col-md-4 text-md-right col-form-label">Song Duration</label>
                                        <div class="col-md-7">
                                            <label class="col-md-4 text-md-right col-form-label" id="Duration"></label>
                                        </div>

                                    </div>*@
                                <div class="card-footer">
                                    <div class="row">
                                        <div class="col-md-4"></div>
                                        <div class="col-md-7">
                                            <input type="submit" class="btn btn-brand btn-air" id="btnUpload" value="Upload Audio">

                                        </div>
                                    </div>
                                </div>
                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <hr />


    <script src="https://code.jquery.com/jquery-2.2.4.js"></script>

    @*@Scripts.Render("~/bundles/jquery")*@
    @Scripts.Render("~/bundles/bootstrap")
    <script src="~/Content/assets/js/vendors.bundle.js"></script>
    <script src="~/Content/assets/js/scripts.bundle.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ajax-unobtrusive/3.2.6/jquery.unobtrusive-ajax.js"></script>
    <script src="https://cdn.rawgit.com/aadsm/jsmediatags/master/dist/jsmediatags.min.js"></script>

    <script>
        debugger;

        var imageTracker = 'playImage';

        //active track
        var activeTrack = 0;

        window.onload = function () {
            showPlaying();
        }

        //set events handlers for on click

        document.getElementById("swapImage").onclick = function () {
            //swapImage();
            var $el = $(this),
                textNode = this.lastChild;
            $el.find('i').toggleClass('ion-md-play ion-md-pause');
            playPause();
        }

        document.getElementById("stopImage").onclick = function () {
            stop();
        }
        document.getElementById("nextImage").onclick = function () {
            forward();
        }
        document.getElementById("backImage").onclick = function () {
            backward();
        }

        var musicTracker = 'noMusic';
        var audios = [];


        // add a zero in front of numbers<10

        function checkTime(i) {
            if (i < 10) {
                i = "0" + i;
            }
            return i;

        }

        $(".song").each(function (index, value) {

            debugger;

            var durationid = ("AirTime" + index);

            //var d = new Date();
            //var seconds = d.getSeconds();
            //var minutes = d.getMinutes();
            //var hours = d.getHours();

            let seconds = 17;
            let minutes = 50;
            let hours = 10;
            hours = checkTime(hours)
            minutes = checkTime(minutes);
            seconds = checkTime(seconds);
            var Songplaytime = hours + ":" + minutes + ":" + seconds;

            var SongDuration = $("#songduration" + index).text();

            var airtimeid = "#AirTime" + (index - 1);
            var getairtime = $(airtimeid).text();
            //test

            if (getairtime !== null && getairtime !== '') {

                var airaudiotime = getairtime.split(/:/);
                let hours = parseInt(airaudiotime[0]);
                let minutes = parseInt(airaudiotime[1]);
                let seconds = parseInt(airaudiotime[2]);

                hours = checkTime(hours)
                minutes = checkTime(minutes);
                seconds = checkTime(seconds);

                //var newtime = hours + ":" + minutes + ":" + seconds;
                var audiotime = SongDuration.split(/:/);
                let nhour = parseInt(audiotime[0]);
                let nmin = parseInt(audiotime[1]);
                let nsec = parseInt(audiotime[2]);
                nhour = checkTime(nhour);
                nmin = checkTime(nmin);
                nsec = checkTime(nsec);

                var newaudiotime = (hours + parseInt(nhour)) + ":" + (minutes + parseInt(nmin)) + ":" + (seconds + parseInt(nsec));
                document.getElementById(durationid).innerHTML = newaudiotime;
                //console.log(newaudiotime);

            }
            else

            {
                var songaudiotime = Songplaytime.split(/:/);
                let hours = parseInt(songaudiotime[0]);
                let minutes = parseInt(songaudiotime[1]);
                let seconds = parseInt(songaudiotime[2]);

                hours = checkTime(hours);
                minutes = checkTime(minutes);
                seconds = checkTime(seconds);


                var SongDuration1 = SongDuration.split(/:/);
                let nhour = parseInt(SongDuration1[0]);
                let nmin = parseInt(SongDuration1[1]);
                let nsec = parseInt(SongDuration1[2]);
                nhour = checkTime(nhour);
                nmin = checkTime(nmin);
                nsec = checkTime(nsec);

                var newaudiotime = (hours + parseInt(nhour)) + ":" + (minutes + parseInt(nmin)) + ":" + (seconds + parseInt(nsec));

                document.getElementById(durationid).innerHTML = newaudiotime;
                console.log(newaudiotime);

            }

            //add a zero in front of numbers<10



            var load = new Audio($(this).attr("url"));
            load.load();

            $(".audio-progress").width((load.currentTime / load.duration) * 100 + '%')

            load.addEventListener('ended', function () {
                forward();
            });

            audios.push(load);


        });





        var playPause = function () {
            debugger;
            if (musicTracker == 'noMusic') {
                audios[activeTrack].play();
                musicTracker = 'playMusic';
            } else {
                audios[activeTrack].pause();
                musicTracker = 'noMusic';
            }
            showPlaying();
        };


        var play = function () {
            debugger;
            if (musicTracker == 'noMusic') {
                audios[activeTrack].play();
                musicTracker = 'playMusic';
            } else {
                audios[activeTrack].pause();
                musicTracker = 'noMusic';
            }
            showPlaying();
        };


        var stop = function () {
            debugger;
            if (musicTracker == 'playMusic') {
                audios[activeTrack].pause();
                audios[activeTrack].currentTime = 0;
                audios[activeTrack].play();
            } else {
                audios[activeTrack].currentTime = 0;
            }
        };

        var forward = function () {
            debugger;
            function increment() {
                if (activeTrack < audios.length - 1)
                    activeTrack++;
                else activeTrack = 0;
            }
            if (musicTracker == 'playMusic') {
                audios[activeTrack].pause();
                //audios[activeTrack].currentTime = 0;
                increment();
                audios[activeTrack].play();
            } else {
                increment();
            }
            showPlaying();
        };


        var backward = function () {
            debugger;
            function decrement() {
                if (activeTrack > 0)
                    activeTrack--;
                else activeTrack = audios.length - 1;
            }
            if (musicTracker == 'playMusic') {
                audios[activeTrack].pause();
                //audios[activeTrack].currentTime = 0;
                decrement();
                audios[activeTrack].play();
            } else {
                decrement();
            }
            showPlaying();
        };


        var showPlaying = function () {
            debugger;
            var src = audios[activeTrack].src;

            var filename = src.substring(src.lastIndexOf('/') + 1);
            var filename1 = filename.split('/').pop().split('#')[0].split('?')[0];
            var res = filename1.replace(/%20/g, " ");
            var filename2 = res.substr(0, res.lastIndexOf('.')) || res;

            document.getElementById("songname").innerHTML = filename2;
            //Get item siblings
            var siblings = ($(this).siblings());

            //Remove active class on all buttons
            siblings.each(function (index) {
                $(this).removeClass('active');
            })

            //Add the clicked button class

            $(this).addClass('playing');

            $(".song").removeClass("playing");
            $("li[url='" + src + "']").addClass("playing");
            //console.log($("li[url='" + src + "']"));

            // code to add log details of current song after every time song played
            var dNow = new Date();
            var localdate = (dNow.getMonth() + 1) + '/' + dNow.getDate() + '/' + dNow.getFullYear() + ' ' + dNow.getHours() + ':' + dNow.getMinutes();
            var playlistname = $('#playlistname').text();


            var data = JSON.stringify({
                'Title': res,
                'EventTime': localdate,
                'playlistname': playlistname
            });
            var logid = "1003";
            $.ajax({
                type: "POST",
                url: '@Url.Action("PutApilog")',
                data: data,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    debugger;
                    //console.log(result);
                   //alert("log has been created successfully.");
                    //LoadData();
                },
                error: function (result) {
                    debugger;
                    //alert("Error while inserting data");
                }
            });
        };


    </script>

    <script>
        // Fetch Audio file metadata from file url

        var objectUrl;

        $("#uploadaudio").on("canplaythrough", function (e) {
            debugger;
            var seconds = e.currentTarget.duration;
            var duration = moment.duration(seconds, "seconds");
            var time = "";
            var mtime = "";
            var hours = duration.hours();
            if (hours > 0) { mtime = hours + ":"; }
            mtime = time + duration.minutes() + ":" + duration.seconds();
            $("#getduration").text(mtime);
            console.log(mtime);
            time = duration.hours() + ":" + duration.minutes() + ":" + duration.seconds();

            $("#fileduration").val(time);

            URL.revokeObjectURL(objectUrl);
        });


        $("#fileupload").change(function (e) {
            debugger;
            var target = e.currentTarget;
            var file = e.currentTarget.files[0];
            var name = file.name;
            var format = name.split('/').pop().split('#')[0].split('?')[0];
            var res = format.replace(/%20/g, " ");
            var filename = res.substr(0, res.lastIndexOf('.')) || res;
            $("#Songname").text(filename);
            $("#FileType").text(file.type);
            $("#FileSize").text(file.size);
            $("#chooseFile").text(file.name);
            objectUrl = URL.createObjectURL(file);
            $("#uploadaudio").prop("src", objectUrl);

            // metadata of file
            jsmediatags.read(file, {
                onSuccess: function (tag) {
                    console.log(tag.tags);
                    // use ajax to upload tag info, or create some new form elements
                },
                onError: function (error) {
                    console.log(error);
                }
            });
        });

    </script>

    @RenderSection("scripts", required: false)
</body>
</html>
